name: nightly
on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-14
            target: aarch64-apple-darwin
            plat_os: darwin
            plat_arch: arm64
            use_cross: false

          - os: macos-13
            target: x86_64-apple-darwin
            plat_os: darwin
            plat_arch: x64
            use_cross: false

          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            plat_os: linux
            plat_arch: x64
            use_cross: false

          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            plat_os: linux
            plat_arch: arm64
            use_cross: true

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set isolated CARGO_TARGET_DIR
        shell: bash
        run: echo "CARGO_TARGET_DIR=$GITHUB_WORKSPACE/target-${{ matrix.target }}-${{ matrix.use_cross }}" >> $GITHUB_ENV

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        if: ${{ matrix.use_cross != 'true' }}

      - name: Build (via cross)
        if: ${{ matrix.use_cross == 'true' }}
        env:
          CROSS_CONTAINER_OPTS: "--env CARGO_TARGET_DIR=${{ env.CARGO_TARGET_DIR }}"
        run: |
          set -euxo pipefail
          cargo install cross --git https://github.com/cross-rs/cross --locked
          cross build --release --target ${{ matrix.target }}

      - name: Build (native)
        if: ${{ matrix.use_cross != 'true' }}
        run: |
          set -euxo pipefail
          cargo build --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p pkg
          BIN="${CARGO_TARGET_DIR:-target}/${{ matrix.target }}/release/qernel"
          if [[ "${{ matrix.plat_os }}" == "darwin" ]]; then strip -x "$BIN" || true; else strip "$BIN" || true; fi
          chmod +x "$BIN"
          cp "$BIN" pkg/qernel
          tar -C pkg -czf "qernel-${{ matrix.plat_os }}-${{ matrix.plat_arch }}.tar.gz" qernel

      - uses: actions/upload-artifact@v4
        with:
          name: qernel-${{ matrix.plat_os }}-${{ matrix.plat_arch }}
          path: qernel-${{ matrix.plat_os }}-${{ matrix.plat_arch }}.tar.gz

  publish:
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Checksums
        shell: bash
        run: |
          set -euxo pipefail
          cd dist
          mapfile -t FILES < <(find . -type f -name 'qernel-*.tar.gz' | sort)
          if [ "${#FILES[@]}" -eq 0 ]; then
            echo "No tarballs found; check earlier build jobs"
            exit 1
          fi

          if command -v sha256sum >/dev/null 2>&1; then
            for f in "${FILES[@]}"; do sha256sum "$f"; done | sed 's#  \./##' > SHA256SUMS
          else
            for f in "${FILES[@]}"; do shasum -a 256 "$f"; done | sed 's#  \./##' > SHA256SUMS
          fi

      - name: Publish GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          set -euxo pipefail
          TAG="${GITHUB_REF_NAME}"
          gh release view "$TAG" >/dev/null 2>&1 || gh release create "$TAG" --latest --generate-notes
          # upload all tarballs from any subfolder + the checksums file
          gh release upload "$TAG" dist/SHA256SUMS $(find dist -type f -name 'qernel-*.tar.gz' -print) --clobber
